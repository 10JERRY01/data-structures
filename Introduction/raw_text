Hello and welcome to this new series on Data Structures. In these first few videos I want to lay the foundation of some core concepts you will need throughout these video tutorials. Let’s get started with the basics.



Let us begin by answering the question: What is a DS? One definition I like is that …

Read on slide

This is all a data structure really is, it is a way of organizing data, in some fashion so that later on it can be accessed, queried, updated and so on in an effective manner.



We now know what a DS is, but why do you care? Why do you want to be familiar with and utilize these entities 
Read Slide
As a side note, the one major distinction I have noticed from bad, mediocre to excellent programmers is that the ones who really excel are the ones who fundamentally understand how and when to use the appropriate data structure for the task they’re trying to finish. Data structures can make the difference between an ok product and an outstanding one, it is no wonder that every computer science under graduate student is required to take a course in data structures. 




It is strange that before we even begin talking about data structures that we need to talk about the abstraction of data structures. What i’m talking about an the concept of an abstract data type.




What is an ADT and how does it differ from a DS? Well the answer is that…
Read what’s on slide
An example I like to give is to suppose your ADT is for a mode of transportation to get from point A to point B. Well as we both know there are many modes of transportation to get you from one place to another. Some specific modes of transportation might be walking, biking, taking a train and so on. These specific modes of transportation are analogous to the DSs themselves.




Here are some examples of ADTs on the left and the underlying implementation on the right hand side. As you can see a List can be implemented in two ways, you can have a dynamic array or a linked list. They both provide ways of adding, removing and indexing elements in a list.

Next we have a Queue and the Map ADTs which themselves can be implemented a variety of ways. Notice that under the implementation for Queue I put a Stack based Queue, because yes you can create a Queue with only Stacks. This is not the most efficient way to implement a Queue, but it does work and it is possible. 

The point here is that the ADT only defines how a DS should behave and what methods it should have but not the details on how those methods are implemented. 

That’s all for this first video, there will be many more to come, thank you for watching.
